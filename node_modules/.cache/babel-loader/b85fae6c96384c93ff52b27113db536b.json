{"remainingRequest":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/store.js","dependencies":[{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/store.js","mtime":1556643170000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.map\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    tasks: JSON.parse(localStorage.getItem('tasks') || '[]').map(function (task) {\n      if (new Date(task.date) < new Date()) {\n        task.status = 'outdated';\n      }\n\n      return task;\n    })\n  },\n  mutations: {\n    createTask: function createTask(state, task) {\n      state.tasks.push(task);\n      localStorage.setItem('tasks', JSON.stringify(state.tasks));\n    },\n    updateTask: function updateTask(state, _ref) {\n      var id = _ref.id,\n          description = _ref.description,\n          date = _ref.date;\n      var tasks = state.tasks.concat();\n      var idx = tasks.findIndex(function (t) {\n        return t.id === id;\n      });\n      var task = tasks[idx];\n      var status = new Date(date) > new Date() ? 'active' : 'outdated';\n      tasks[idx] = _objectSpread({}, task, {\n        date: date,\n        description: description,\n        status: status\n      });\n      state.tasks = tasks;\n      localStorage.setItem('tasks', JSON.stringify(state.tasks));\n    },\n    completeTask: function completeTask(state, id) {\n      var idx = state.tasks.findIndex(function (t) {\n        return t.id === id;\n      });\n      state.tasks[idx].status = 'completed';\n      localStorage.setItem('tasks', JSON.stringify(state.tasks));\n    }\n  },\n  actions: {\n    createTask: function createTask(_ref2, task) {\n      var commit = _ref2.commit;\n      commit('createTask', task);\n    },\n    updateTask: function updateTask(_ref3, task) {\n      var commit = _ref3.commit;\n      commit('updateTask', task);\n    },\n    completeTask: function completeTask(_ref4, id) {\n      var commit = _ref4.commit;\n      commit('completeTask', id);\n    }\n  },\n  getters: {\n    tasks: function tasks(s) {\n      return s.tasks;\n    },\n    taskById: function taskById(s) {\n      return function (id) {\n        return s.tasks.find(function (t) {\n          return t.id === id;\n        });\n      };\n    }\n  }\n});",{"version":3,"sources":["/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/store.js"],"names":["Vue","Vuex","use","Store","state","tasks","JSON","parse","localStorage","getItem","map","task","Date","date","status","mutations","createTask","push","setItem","stringify","updateTask","id","description","concat","idx","findIndex","t","completeTask","actions","commit","getters","s","taskById","find"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    tasks: JSON.parse(localStorage.getItem('tasks') || '[]').map(task => {\n      if (new Date(task.date) < new Date()) {\n        task.status = 'outdated'\n      }\n      return task\n    })\n  },\n  mutations: {\n    createTask(state, task) {\n      state.tasks.push(task)\n\n      localStorage.setItem('tasks', JSON.stringify(state.tasks))\n    },\n    updateTask(state, {id, description, date}) {\n      const tasks = state.tasks.concat()\n\n      const idx = tasks.findIndex(t => t.id === id)\n      const task = tasks[idx]\n\n      const status = new Date(date) > new Date() ? 'active' : 'outdated'\n\n      tasks[idx] = {...task, date, description, status}\n\n      state.tasks = tasks\n      localStorage.setItem('tasks', JSON.stringify(state.tasks))\n    },\n    completeTask(state, id) {\n      const idx = state.tasks.findIndex(t => t.id === id)\n      state.tasks[idx].status = 'completed'\n      localStorage.setItem('tasks', JSON.stringify(state.tasks))\n    }\n  },\n  actions: {\n    createTask({commit}, task) {\n      commit('createTask', task)\n    },\n    updateTask({commit}, task) {\n      commit('updateTask', task)\n    },\n    completeTask({commit}, id) {\n      commit('completeTask', id)\n    }\n  },\n  getters: {\n    tasks: s => s.tasks,\n    taskById: s => id => s.tasks.find(t => t.id === id)\n  }\n})\n"]}]}