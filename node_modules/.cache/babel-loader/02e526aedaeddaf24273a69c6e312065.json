{"remainingRequest":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/views/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/views/Create.vue","mtime":1556641676000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.date.now\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'create',\n  data: function data() {\n    return {\n      description: '',\n      title: '',\n      chips: null,\n      date: null\n    };\n  },\n  mounted: function mounted() {\n    this.chips = M.Chips.init(this.$refs.chips, {\n      placeholder: 'Task tags'\n    });\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\n      format: 'dd.mm.yyyy',\n      defaultDate: new Date(),\n      setDefaultDate: true\n    });\n  },\n  methods: {\n    submitHandler: function submitHandler() {\n      var task = {\n        title: this.title,\n        description: this.description,\n        id: Date.now(),\n        status: 'active',\n        tags: this.chips.chipsData,\n        date: this.date.date\n      };\n      this.$store.dispatch('createTask', task);\n      this.$router.push('/list');\n    }\n  },\n  destroyed: function destroyed() {\n    if (this.date && this.date.destroy) {\n      this.date.destroy();\n    }\n\n    if (this.chips && this.chips.destroy) {\n      this.chips.destroy();\n    }\n  }\n};",{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAAA,GAFA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA,CAAA;AAGA,SAAA,IAAA,GAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,UAAA,EAAA;AACA,MAAA,MAAA,EAAA,YADA;AAEA,MAAA,WAAA,EAAA,IAAA,IAAA,EAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA,CAAA;AAKA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,KADA;AAEA,QAAA,WAAA,EAAA,KAAA,WAFA;AAGA,QAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAHA;AAIA,QAAA,MAAA,EAAA,QAJA;AAKA,QAAA,IAAA,EAAA,KAAA,KAAA,CAAA,SALA;AAMA,QAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AANA,OAAA;AASA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAbA,GAlBA;AAiCA,EAAA,SAjCA,uBAiCA;AACA,QAAA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,OAAA,EAAA;AACA,WAAA,IAAA,CAAA,OAAA;AACA;;AAEA,QAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA;AACA;AACA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col s6 offset-s3\">\n      <h1>Create task</h1>\n\n      <form @submit.prevent=\"submitHandler\">\n        <div class=\"input-field\">\n          <input id=\"title\" v-model=\"title\" type=\"text\" class=\"validate\" required>\n          <label for=\"title\">Title</label>\n          <span class=\"helper-text\" data-error=\"Title is required\"></span>\n        </div>\n\n        <div class=\"chips\" ref=\"chips\"></div>\n\n        <div class=\"input-field\">\n          <textarea v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n          <label for=\"description\">Description</label>\n          <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n        </div>\n\n        <input type=\"text\" ref=\"datepicker\">\n\n        <button class=\"btn\" type=\"submit\">Create task</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'create',\n  data: () => ({\n    description: '',\n    title: '',\n    chips: null,\n    date: null,\n  }),\n  mounted() {\n    this.chips = M.Chips.init(this.$refs.chips, {\n      placeholder: 'Task tags'\n    })\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\n      format: 'dd.mm.yyyy',\n      defaultDate: new Date(),\n      setDefaultDate: true\n    })\n  },\n  methods: {\n    submitHandler() {\n      const task = {\n        title: this.title,\n        description: this.description,\n        id: Date.now(),\n        status: 'active',\n        tags: this.chips.chipsData,\n        date: this.date.date\n      }\n\n      this.$store.dispatch('createTask', task)\n      this.$router.push('/list')\n    }\n  },\n  destroyed() {\n    if (this.date && this.date.destroy) {\n      this.date.destroy()\n    }\n\n    if (this.chips && this.chips.destroy) {\n      this.chips.destroy()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}