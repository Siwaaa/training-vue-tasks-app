{"remainingRequest":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/views/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/views/Task.vue","mtime":1556642516000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  computed: {\n    task: function task() {\n      return this.$store.getters.taskById(+this.$route.params.id);\n    }\n  },\n  data: function data() {\n    return {\n      description: '',\n      chips: null,\n      date: null\n    };\n  },\n  mounted: function mounted() {\n    this.description = this.task.description;\n    this.chips = M.Chips.init(this.$refs.chips, {\n      placeholder: 'Task tags',\n      data: this.task.tags\n    });\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\n      format: 'dd.mm.yyyy',\n      defaultDate: new Date(this.task.date),\n      setDefaultDate: true\n    });\n    setTimeout(function () {\n      M.updateTextFields();\n    }, 0);\n  },\n  methods: {\n    submitHandler: function submitHandler() {\n      this.$store.dispatch('updateTask', {\n        id: this.task.id,\n        description: this.description,\n        date: this.date.date\n      });\n      this.$router.push('/list');\n    },\n    completeTask: function completeTask() {\n      this.$store.dispatch('completeTask', this.task.id);\n      this.$router.push('/list');\n    }\n  },\n  destroyed: function destroyed() {\n    if (this.date && this.date.destroy) {\n      this.date.destroy();\n    }\n\n    if (this.chips && this.chips.destroy) {\n      this.chips.destroy();\n    }\n  }\n};",{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AACA;AAHA,GADA;AAMA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAAA,GANA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,WAAA,GAAA,KAAA,IAAA,CAAA,WAAA;AACA,SAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,MAAA,WAAA,EAAA,WADA;AAEA,MAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AAFA,KAAA,CAAA;AAIA,SAAA,IAAA,GAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,UAAA,EAAA;AACA,MAAA,MAAA,EAAA,YADA;AAEA,MAAA,WAAA,EAAA,IAAA,IAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA,CAAA;AAKA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,CAAA,CAAA,gBAAA;AACA,KAFA,EAEA,CAFA,CAAA;AAGA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,EAAA,EAAA,KAAA,IAAA,CAAA,EADA;AAEA,QAAA,WAAA,EAAA,KAAA,WAFA;AAGA,QAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AAHA,OAAA;AAKA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KARA;AASA,IAAA,YATA,0BASA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAZA,GA1BA;AAwCA,EAAA,SAxCA,uBAwCA;AACA,QAAA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,OAAA,EAAA;AACA,WAAA,IAAA,CAAA,OAAA;AACA;;AAEA,QAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA;AACA;AACA;AAhDA,CAAA","sourcesContent":["<template>\n  <div class=\"row\">\n    <div v-if=\"task\" class=\"col s6 offset-s3\">\n      <h1>{{task.title}}</h1>\n\n      <form @submit.prevent=\"submitHandler\">\n\n        <div class=\"chips\" ref=\"chips\"></div>\n\n        <div class=\"input-field\">\n          <textarea style=\"min-height: 150px\" v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n          <label for=\"description\">Description</label>\n          <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n        </div>\n\n        <input type=\"text\" ref=\"datepicker\">\n\n        <div v-if=\"task.status !== 'completed'\">\n          <button class=\"btn\" type=\"submit\" style=\"margin-right: 1rem;\">Update</button>\n          <button class=\"btn blue\" type=\"button\" @click=\"completeTask\">Complete task</button>\n        </div>\n      </form>\n    </div>\n    <p v-else>Task not found</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    task() {\n      return this.$store.getters.taskById(+this.$route.params.id)\n    }\n  },\n  data: () => ({\n    description: '',\n    chips: null,\n    date: null,\n  }),\n  mounted() {\n    this.description = this.task.description\n    this.chips = M.Chips.init(this.$refs.chips, {\n      placeholder: 'Task tags',\n      data: this.task.tags\n    })\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\n      format: 'dd.mm.yyyy',\n      defaultDate: new Date(this.task.date),\n      setDefaultDate: true\n    })\n    setTimeout(() => {\n      M.updateTextFields()\n    }, 0)\n  },\n  methods: {\n    submitHandler() {\n      this.$store.dispatch('updateTask', {\n        id: this.task.id,\n        description: this.description,\n        date: this.date.date\n      })\n      this.$router.push('/list')\n    },\n    completeTask() {\n      this.$store.dispatch('completeTask', this.task.id)\n      this.$router.push('/list')\n    }\n  },\n  destroyed() {\n    if (this.date && this.date.destroy) {\n      this.date.destroy()\n    }\n\n    if (this.chips && this.chips.destroy) {\n      this.chips.destroy()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/views"}]}