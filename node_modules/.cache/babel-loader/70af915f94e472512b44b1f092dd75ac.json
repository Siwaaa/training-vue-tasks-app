{"remainingRequest":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/src/views/List.vue","mtime":1556643012000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrej/Sites/learn-web/js-vuejs/vue1/task-sobes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      filter: null\n    };\n  },\n  computed: {\n    tasks: function tasks() {\n      return this.$store.getters.tasks;\n    },\n    displayTasks: function displayTasks() {\n      var _this = this;\n\n      return this.tasks.filter(function (t) {\n        if (!_this.filter) {\n          return true;\n        }\n\n        return t.status === _this.filter;\n      });\n    }\n  },\n  mounted: function mounted() {\n    M.FormSelect.init(this.$refs.select);\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAAA,GADA;AAIA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AAAA;;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA,iBAAA,IAAA;AACA;;AACA,eAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,MAAA;AACA,OALA,CAAA;AAMA;AAXA,GAJA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,IAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,MAAA;AACA;AAnBA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>List</h1>\n\n    <div class=\"row\">\n      <div class=\"input-field col s6 \">\n        <select ref=\"select\" v-model=\"filter\">\n          <option value=\"\" disabled selected>Choose your option</option>\n          <option value=\"active\">Active</option>\n          <option value=\"outdated\">Outdated</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <label>Status filter</label>\n      </div>\n    </div>\n\n    <button v-if=\"filter\" class=\"btn btn-small red\" @click=\"filter = null\">Clear filter</button>\n\n    <hr>\n\n    <table v-if=\"tasks.length\">\n      <thead>\n      <tr>\n        <th>#</th>\n        <th>Title</th>\n        <th>Date</th>\n        <th>Description</th>\n        <th>Status</th>\n        <th>Open</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr\n          v-for=\"(task, idx) of displayTasks\"\n          :key=\"task.id\"\n      >\n        <td>{{idx + 1}}</td>\n        <td>{{task.title}}</td>\n        <td>{{new Date(task.date).toLocaleDateString()}}</td>\n        <td class=\"td\">\n          <div class=\"text\">{{task.description}}</div>\n        </td>\n        <td>{{task.status}}</td>\n        <td>\n          <router-link tag=\"button\" class=\"btn btn-small\" :to=\"'/task/' + task.id\">\n            Open\n          </router-link>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <p v-else>No tasks</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    filter: null,\n  }),\n  computed: {\n    tasks() {\n      return this.$store.getters.tasks\n    },\n    displayTasks() {\n      return this.tasks.filter(t => {\n        if (!this.filter) {\n          return true\n        }\n        return t.status === this.filter\n      })\n    }\n  },\n  mounted() {\n    M.FormSelect.init(this.$refs.select)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .td {\n    max-width: 400px;\n  }\n\n  .text {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n</style>"],"sourceRoot":"src/views"}]}